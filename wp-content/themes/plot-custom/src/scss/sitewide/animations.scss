.SVGelement {
    transform-origin: 50% 50%;
    transform-box: fill-box;
}

.SVGelement__1 {
    opacity: 0;

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--1, loadedAnimation--1;
        animation-duration: .2s, 5s; 
        animation-timing-function: ease-in-out, ease-in-out;
        animation-fill-mode: forwards, forwards;
        animation-iteration-count: 1, infinite;
    }
}

.SVGelement.SVGelement__1,
.SVGelement.SVGelement__3,
.SVGelement.SVGelement__8,
.SVGelement.SVGelement__10,
.SVGelement.SVGelement__18,
.SVGelement.SVGelement__19,
.SVGelement.SVGelement__20,
.SVGelement.SVGelement__21,
.SVGelement.SVGelement__22,
.SVGelement.SVGelement__26 {

    .plotSmoothScrollInView & {
        $i: 1;
        $speed: .3s;
        $delay: 0s;
        @while $i <= 12 {
        
            &:nth-child(#{$i}) {
                animation-delay: #{$i * $speed + $delay}; 
            }
    
            $i: $i + 1;
            
        }
    }
}

.SVGelement__2--top {
    opacity: 0;

    .plotSmoothScrollInView & {        
        animation-name: entryAnimation--1, loadedAnimation--top;
        animation-duration: .3s, 15s; 
        animation-timing-function: ease-in-out, ease-in-out;
        animation-fill-mode: forwards, forwards;
        animation-iteration-count: 1, infinite;
        animation-delay: 0s, .5s;
    }
}

.SVGelement__2--middle {
    opacity: 0;

    .plotSmoothScrollInView & {        
        animation-name: entryAnimation--1;
        animation-duration: .2s; 
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards;
        animation-iteration-count: 1;
        animation-delay: .2s;
    }
}

.SVGelement__2--bottom {
    opacity: 0;

    .plotSmoothScrollInView & {        
        animation-name: entryAnimation--1, loadedAnimation--bottom;
        animation-duration: .2s, 15s; 
        animation-timing-function: ease-in-out, ease-in-out;
        animation-fill-mode: forwards, forwards;
        animation-iteration-count: 1, infinite;
        animation-delay: .4s, .5s;
    }
}


.SVGelement__3 {
    opacity: 0;

    .plotSmoothScrollInView & {
        animation-name: loadedAnimation--4;
        animation-duration: 3s; 
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards;
        animation-iteration-count: infinite; 
    }
}

.SVGelement__4 {
    opacity: 0;

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--1;
        animation-duration: 1s; 
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards;
    }
}

.SVGelement.SVGelement__5 {
    transform-origin: top;
    transform: scale3d(1, 0, 1);

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--3;
        animation-duration: 1s; 
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
 
        animation-delay: calc(var(--i) * .5s); 
    }

}

.SVGelement.SVGelement__6 {
    transform-origin: top;
    transform: scale3d(1, 0, 1);

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--3;
        animation-duration: 1s; 
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
            
        $i: 1;
        $speed: .3s;
        $delay: 1s;
        @while $i <= 12 {
        
            &:nth-child(#{$i}) {
                animation-delay: #{$i * $speed + $delay}; 
            }
    
            $i: $i + 1;
            
        }
    }
}

.SVGelement.SVGelement__7 {
    transform-origin: top;
    transform: scale3d(1, 0, 1);

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--3;
        animation-duration: 1s; 
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-delay: .4s;
    }
}


.SVGelement.SVGelement__8 {
    opacity: 0;

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--4;
        animation-duration: .3s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
    }
}

.SVGelement__9 {

    .plotSmoothScrollInView & {
        animation-name: loadedAnimation--4;
        animation-duration: 3s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-iteration-count: infinite;
    
        $i: 1;
        $speed: .3s;
        $delay: 3.2s;
        @while $i <= 12 {
        
            &:nth-child(#{$i}) {
                animation-delay: #{$i * $speed + $delay}; 
            }
    
            $i: $i + 1;
            
        }
    }
}

.SVGelement__10 {
    opacity: 0;
    .plotSmoothScrollInView & {
        animation-name: entryAnimation--4;
        animation-duration: 1s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
    }
}

.SVGelement__11 {

    .plotSmoothScrollInView & {
        animation-name: loadedAnimation--5;
        animation-duration: 3s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-iteration-count: infinite;
    }
}


.SVGelement__12 {

    .plotSmoothScrollInView & {
        animation-name: loadedAnimation--6;
        animation-duration: 3s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-iteration-count: infinite;
    }
}

.SVGelement.SVGelement__13,
.SVGelement.SVGelement__17 {
    opacity: 0;

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--2, loadedAnimation--4;
        animation-duration: 1s, 5s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-iteration-count: 1, infinite;

        $i: 1;
        $speed: .3s;
        $delay: 0s;
        @while $i <= 12 {
        
            &:nth-child(#{$i}) {
                animation-delay: #{$i * $speed + $delay}, #{$i * $speed + $delay + 2.5s}; 
            }
    
            $i: $i + 1; 
            
        }
    }
}

.SVGelement.SVGelement__14 {
    opacity: 0;

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--2, loadedAnimation--7;
        animation-duration: 1s, 8s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-iteration-count: 1, infinite;

        $i: 1;
        $speed: .3s;
        $delay: 0s;
        @while $i <= 12 {
        
            &:nth-last-child(#{$i}) {
                animation-delay: #{$i * $speed + $delay}, #{$i * 4s}; 
            }
    
            $i: $i + 1; 
            
        }
    }
}

.SVGelement.SVGelement__15 {
    opacity: 0;

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--2;
        animation-duration: 1s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-iteration-count: 1;

        $i: 1;
        $speed: .3s;
        $delay: 0s;
        @while $i <= 12 {
        
            &:nth-last-child(#{$i}) {
                animation-delay: #{$i * $speed + $delay}, #{$i * 4s}; 
            }
    
            $i: $i + 1; 
            
        }
    }
}

.SVGelement.SVGelement__16,
.SVGelement.SVGelement__27 {
    opacity: 1;

    .plotSmoothScrollInView & {
        animation-name: loadedAnimation--8;
        animation-duration: 7s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-iteration-count: infinite;
        animation-delay: 2s;
    }
}

.SVGelement.SVGelement__18,
.SVGelement.SVGelement__20,
.SVGelement.SVGelement__22,
.SVGelement.SVGelement__26 {
    opacity: 0;

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--2;
        animation-duration: 1s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-iteration-count: 1;
    }
}

.SVGelement.SVGelement__19,
.SVGelement.SVGelement__21 {
    

    .plotSmoothScrollInView & {
        animation-name: loadedAnimation--2;
        animation-duration: 20s;
        animation-timing-function: linear;
        animation-fill-mode: forwards; 
        animation-iteration-count: infinite;
    }
}

.SVGelement.SVGelement__23,
.SVGelement.SVGelement__25 {

    .plotSmoothScrollInView & {
        animation-name: loadedAnimation--9;
        animation-duration: 3s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-iteration-count: infinite;
    
        $i: 1;
        $speed: .3s;
        $delay: 3.2s;
        @while $i <= 12 {
        
            &:nth-child(#{$i}) {
                animation-delay: #{$i * $speed + $delay}; 
            }
    
            $i: $i + 1;
            
        }
    }
}

.SVGelement.SVGelement__24 {
    transform-origin: bottom;
    transform: scale3d(1, 0, 1);

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--3;
        animation-duration: 1.5s; 
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-delay: .2s;
    }
}

.SVGelement.SVGelement__28 {
    opacity: 0;

    .plotSmoothScrollInView & {
        animation-name: entryAnimation--2, loadedAnimation--1;
        animation-duration: 1s, 4s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards; 
        animation-iteration-count: 1, infinite;

        $i: 1;
        $speed: .3s;
        $delay: 0s;
        @while $i <= 12 {
        
            &:nth-child(#{$i}) {
                animation-delay: #{$i * $speed + $delay}, #{$i * $speed + $delay + 2.5s}; 
            }
    
            $i: $i + 1; 
            
        }
    }
}



@keyframes entryAnimation--1 {
    0% { 
        transform: scale3d(.2, .2, .2) rotate3d(0, 0, 1, 90deg);
        opacity: 0;
    }

    100% { 
        opacity: 1; 
        transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 0deg);
    }
}

@keyframes entryAnimation--2 {
    0% { 
        transform: scale3d(.2, .2, .2);
        opacity: 0;
    }
    100% { 
        opacity: 1; 
        transform: scale3d(1, 1, 1);
    }
}

@keyframes entryAnimation--3 {
    0% { 
        transform: scale3d(1, 0, 1);
        
    }
    100% { 
        transform: scale3d(1, 1, 1);
    }
}
@keyframes entryAnimation--4 {
    0% { 
        transform: translate3d(0, 20px, 0);
        opacity: 0;
    }

    100% { 
        opacity: 1; 
        transform: translate3d(0, 0, 0);
    }
}

// 
// Custom Loaded
// 

@keyframes loadedAnimation--1 {
    0% { 
        transform: translate3d(0,0,0);
    }

    50% {
        transform: translate3d(0,2px,0);
    }

    75% {
        transform: translate3d(0,-2px,0);
    }

    100% { 
        transform: translate3d(0,0,0);
    }
}

@keyframes loadedAnimation--2 {
    0% {
        transform: rotate3d(0, 0, 1, 0deg);
    }
    100% {
        transform: rotate3d(0, 0, 1, 360deg);
    }
}

@keyframes loadedAnimation--3 {
    0% { 
        transform: scale3d(.2, .2, .2);
        opacity: 0;
    }

    25% {
        opacity: 1; 
        transform: scale3d(1, 1, 1);
    }

    75% {
        opacity: 1; 
        transform: scale3d(1, 1, 1);
    }

    100% { 
        transform: scale3d(.2, .2, .2);
        opacity: 0;
    }
}

@keyframes loadedAnimation--4 {
    0% {
        opacity: 1;
        transform: translate3d(0,0,0);
    }

    25% {
        
        transform: translate3d(0,5px,0);
    }

    75% {
        
        transform: translate3d(0,0,0);
    }
    100% {
        opacity: 1;
        transform: translate3d(0,0,0);
    }
}

@keyframes loadedAnimation--7 {
    0% {
        transform: scale3d(1,1,1);
    }
    50% {
        transform: scale3d(.95,.95,1);
    }
    100% {
        transform: scale3d(1,1,1);
    }
}

@keyframes loadedAnimation--8 {
    0% {
        transform: rotate3d(0, 0, 1, 0deg);
    }
    25% {
        transform: rotate3d(0, 0, 1, 20deg);
    }
    75% {
        transform: rotate3d(0, 0, 1, -20deg);
    }
    100% {
        transform: rotate3d(0, 0, 1, 0deg);
    }
}

@keyframes loadedAnimation--9 {
    0% {
        opacity: 1;
    }

    25% {
        opacity: .75;
    }

    75% {
        opacity: 1;
        
    }
    100% {
        opacity: 1;
    }
}


// 
// Custom Animatiom
// 

@keyframes loadedAnimation--top {
    0% { 
        transform: translate3d( 0, 0, 0);
    }

    50% {
        transform: translate3d(-33%, 50%, 0);
    }

    75% {
        transform: translate3d(-33%, 50%, 0);    
    }

    100% { 
        transform: translate3d( 0,0,0);
    }
}

@keyframes loadedAnimation--bottom {
    0% { 
        transform: translate3d( 0, 0, 0);
    }

    50% {
        transform: translate3d(33%, -50%, 0);
    }

    75% {
        transform: translate3d(33%, -50%, 0);
    }

    100% { 
        transform: translate3d( 0,0,0);
    }
}

@keyframes loadedAnimation--5 {
    0% {
        transform: translate3d(0,0,0);
        fill: #D95496;
    }

    25% {
        transform: translate3d(-90%,0,0);
        fill: #D95496;
    }
    30% {
        fill: #7AE5E5;
    }
    50% {
        transform: translate3d(-90%,0,0);
        fill: #7AE5E5;
    }

    75% {
        transform: translate3d(0,0,0);
        fill: #7AE5E5;
    }
    80% {
        fill: #D95496;
    }
    100% {
        transform: translate3d(0,0,0);
    }
}

@keyframes loadedAnimation--6 {
    0% {
        fill: #EAB8D1;
    }

    25% {
        fill: #EAB8D1;
    }
    30% {
        fill: #A88FD9;
    }
    50% {
        fill: #A88FD9;
    }

    75% {
        fill: #A88FD9;
    }
    80% {
        fill: #EAB8D1;
    }
    100% {
    }
}


@keyframes bob--2 {
    0% { transform: translate3d(0,0,0) rotate3d(0,0,1,0deg) }

    20% {transform: translate3d(-20%,5%,0)rotate3d(0,0,1,25deg) }

    40% {transform: translate3d(5%,20%,0) rotate3d(0,0,1,95deg) }

    60% {transform: translate3d(-15%,5%,0) rotate3d(0,0,1,180deg) }

    80% {transform: translate3d(-15%,10%,0) rotate3d(0,0,1,90deg) }

    100% { transform: translate3d(0,0,0) rotate3d(0,0,1,0deg) }
}

@keyframes bob--1 {
    0% { transform: translate3d(0,0,0) rotate3d(0,0,1,0deg) }

    20% {transform: translate3d(-30%, -30%,0)rotate3d(0,0,1,-25deg) }

    40% {transform: translate3d(-25%, -25%,0) rotate3d(0,0,1,-20deg) }

    60% {transform: translate3d(-45%, -15%,0) rotate3d(0,0,1,-95deg) }

    80% {transform: translate3d(-15%, 0%,0) rotate3d(0,0,1,-45deg) }

    100% { transform: translate3d(0,0,0) rotate3d(0,0,1,0deg) }
}
